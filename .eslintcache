[{"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\index.js":"1","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\index.js":"2","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\index.js":"3","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\styles.js":"4","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\styles.js":"5","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\index.js":"6","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\styles.js":"7","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\index.js":"8","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\styles.js":"9","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\index.js":"10","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\styles.js":"11","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\services\\api.js":"12","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\utils\\typeicons.js":"13","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\index.js":"14","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\styles.js":"15"},{"size":239,"mtime":1609347888493,"results":"16","hashOfConfig":"17"},{"size":3058,"mtime":1609346252068,"results":"18","hashOfConfig":"17"},{"size":937,"mtime":1609346023277,"results":"19","hashOfConfig":"17"},{"size":899,"mtime":1609164619592,"results":"20","hashOfConfig":"17"},{"size":1164,"mtime":1609346165241,"results":"21","hashOfConfig":"17"},{"size":246,"mtime":1609113647303,"results":"22","hashOfConfig":"17"},{"size":298,"mtime":1609114273494,"results":"23","hashOfConfig":"17"},{"size":354,"mtime":1609116430443,"results":"24","hashOfConfig":"17"},{"size":505,"mtime":1609116395419,"results":"25","hashOfConfig":"17"},{"size":947,"mtime":1609344126436,"results":"26","hashOfConfig":"17"},{"size":900,"mtime":1609166379226,"results":"27","hashOfConfig":"17"},{"size":148,"mtime":1609330365670,"results":"28","hashOfConfig":"17"},{"size":721,"mtime":1609344236044,"results":"29","hashOfConfig":"17"},{"size":3980,"mtime":1610052504872,"results":"30","hashOfConfig":"17"},{"size":2050,"mtime":1610048754035,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1b2x6x9",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\index.js",["69"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Home from './views/Home';\nimport Task from './views/Task';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Task />\n  </React.StrictMode>,\n  document.getElementById('root')\n);",["70","71"],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\index.js",["72","73"],"import React, {useState, useEffect} from 'react';\r\nimport * as S from './styles';\r\n\r\nimport api from '../../services/api'; // conexao com BD via API\r\n\r\n// Components\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\n\r\n\r\nfunction Home() {\r\n    const [filterActived, setFilterActived] = useState('all');\r\n    const [tasks, setTasks] = useState([]); // [] para guardar varias informaçoes\r\n    const [lateCount, setLateCount] = useState(); // armazenar a quantidade de tarefas em atraso\r\n\r\n    // funçao para carregar as informaçoes das tarefas da BD, atraves de filtros\r\n    async function loadTasks(){\r\n        await api.get(`/task/filter/${filterActived}/11-11-11-11-11-11`)\r\n        .then(response => {\r\n            setTasks(response.data);\r\n            //console.log(response.data);\r\n        })\r\n    }\r\n\r\n    // quantidade de tarefas em atraso\r\n    async function lateVerify(){\r\n            await api.get(`/task/filter/late/11-11-11-11-11-11`)\r\n            .then(response => {\r\n                setLateCount(response.data.length);\r\n            })\r\n    }\r\n\r\n    // para ter o onclick no sino de notificaçoes atrasadas\r\n    function Notification(){\r\n        setFilterActived('late');\r\n    }\r\n\r\n    // carregar tarefas ecra\r\n    useEffect(() => {\r\n        loadTasks(); // carregar todas as tarefas no ecra\r\n        lateVerify(); // carregar as tarefas em atraso no \"sino\" de notificação\r\n    }, [filterActived]) // sempre que o estado mudar ->filterActived, tambem recarrega o ecra\r\n\r\n\r\n    return (\r\n    <S.Container>\r\n    <Header lateCount={lateCount} clickNotification={Notification}/>\r\n\r\n    <S.FilterArea>\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"all\")}   >\r\n        <FilterCard title=\"Todos\"   actived={filterActived === 'all'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"today\")}   >\r\n        <FilterCard title=\"Hoje\"    actived={filterActived === 'today'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"week\")}   >\r\n        <FilterCard title=\"Semana\"  actived={filterActived === 'week'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"month\")}   >\r\n        <FilterCard title=\"Mês\"     actived={filterActived === 'month'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"year\")}   >\r\n        <FilterCard title=\"Ano\"     actived={filterActived === 'year'} />\r\n        </button>\r\n    </S.FilterArea>\r\n\r\n    <S.Title>\r\n        <h3>{filterActived == 'late' ? 'TAREFAS ATRASADAS' : 'TAREFAS'}</h3>\r\n    </S.Title>\r\n\r\n\r\n\r\n    <S.Content>\r\n       {\r\n           // map percorre item por item dentro da coleçao\r\n        tasks.map(t => ( \r\n        <TaskCard type={t.type} title={t.title} when={t.when} />\r\n        ))\r\n       }\r\n    </S.Content>\r\n    \r\n    <Footer/>\r\n    </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\index.js",["74","75","76"],"import React from 'react';\r\nimport * as S from './styles';\r\n\r\nimport logo from '../../assets/logo.png'\r\nimport bell from '../../assets/bell.png'\r\n\r\nfunction Header({lateCount, clickNotification}) {\r\n    return (\r\n\r\n        <S.Container>\r\n            <S.LeftSide>\r\n                <img src={logo} alt=\"Logo\" />\r\n            </S.LeftSide>\r\n            <S.RightSide>\r\n                <a href=\"#\">INÍCIO</a>\r\n                <span className=\"dividir\"/>\r\n                <a href=\"#\">NOVA TAREFA</a>\r\n                <span className=\"dividir\"/>\r\n                <a href=\"#\">SINCRONIZAR DISPOSITIVO</a>\r\n                <span className=\"dividir\"/>\r\n                <button onClick={clickNotification} id=\"notification\">\r\n                    <img src={bell} alt=\"Notificação\"/>\r\n                    <span>{lateCount}</span>\r\n                </button>\r\n            </S.RightSide>\r\n        </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\index.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\index.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\styles.js",[],["77","78"],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\index.js",["79","80"],"import React, {useMemo} from 'react'; // vai auxiliar a separar data e hora de when -> useMemo\r\nimport {format} from 'date-fns'; // para formatar data e hora\r\nimport * as S from './styles';\r\n\r\nimport typeIcons from '../../utils/typeicons';\r\n\r\n// import iconDefault from '../../assets/default.png';\r\n\r\nfunction TaskCard({type, title, when}) {\r\n    const date = useMemo(() => format(new Date(when), 'dd/MM/yyyy' ) ); // converter when (que está em string) para formato de data e hora\r\n    const hour = useMemo(() => format(new Date(when), 'HH:mm' ) );\r\n\r\n    return (\r\n\r\n        <S.Container>\r\n            <S.TopCard>\r\n                <img src={typeIcons[type]} alt=\"Icone da Tarefa\"/>\r\n                <h3>{title}</h3>\r\n            </S.TopCard>\r\n            <S.BottomCard>\r\n                <strong>{date}</strong>\r\n                <span>{hour}</span>\r\n\r\n            </S.BottomCard>\r\n        </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default TaskCard;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\services\\api.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\utils\\typeicons.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\index.js",["81","82","83"],"import React, {useState, useEffect} from 'react';\r\nimport * as S from './styles';\r\n\r\nimport api from '../../services/api'; // conexao com BD via API\r\n\r\n// Components\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TypeIcons from '../../utils/typeicons';\r\n\r\nimport iconCalendar from '../../assets/calendar.png';\r\nimport iconClock from '../../assets/clock.png';\r\n\r\nfunction Task() {\r\n    const [lateCount, setLateCount] = useState(); // armazenar a quantidade de tarefas em atraso\r\n    const [type, setType] = useState(); // tipo da tarefa\r\n    const [id , setId] = useState(); // guardar ID tarefa\r\n    const [done, setDone] = useState(false); // tarefa concluida ou nao -> por padrao inicia a false (nao concluida)\r\n    const [title, setTitle] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [date, setDate] = useState();\r\n    const [hour, setHour] = useState();\r\n    const [macaddress, setMacaddress] = useState('11-11-11-11-11-11');\r\n\r\n\r\n    // quantidade de tarefas em atraso\r\n    async function lateVerify(){\r\n            await api.get(`/task/filter/late/11-11-11-11-11-11`)\r\n            .then(response => {\r\n                setLateCount(response.data.length);\r\n            })\r\n    }\r\n\r\n    // registar nova tarefa pela API\r\n    async function Save(){\r\n        await api.post('/task', {\r\n            macaddress,\r\n            type,\r\n            title,\r\n            description,\r\n            when: `${date}T${hour}:00.000` // para ficar no padrao do mongoDB\r\n        }).then(() => alert('Tarefa registada com sucesso')\r\n        ).catch((error) => {\r\n            alert('Error ' + error); // adicionei aqui\r\n          });}\r\n\r\n    // carregar tarefas ecra\r\n    useEffect(() => {\r\n        lateVerify(); // carregar as tarefas em atraso no \"sino\" de notificação\r\n    }, []) \r\n\r\n    return (\r\n    <S.Container>\r\n    <Header lateCount={lateCount} />\r\n\r\n\r\n    <S.Form>\r\n\r\n        <S.TypeIcons>\r\n            {\r\n                // para cada icon que encontrar, é gerado um elemento\r\n                TypeIcons.map((icon, index) => (\r\n                    index > 0 && \r\n                    // o index [0] está como null\r\n                    <button type=\"button\" onClick={() => setType(index)}>\r\n                    <img src={icon} alt=\"Tipo da Tarefa\" \r\n                    className={type && type !== index && 'inactive'} /> \r\n                    </button>\r\n                ))\r\n            }\r\n        </S.TypeIcons>\r\n\r\n        <S.Input>\r\n            <span>Título</span>\r\n            <input type=\"text\" placeholder=\"Título da tarefa...\" \r\n            onChange={e => setTitle(e.target.value)} value={title} />\r\n        </S.Input>\r\n\r\n        <S.TextArea>\r\n            <span>Descrição</span>\r\n            <textarea rows={5} placeholder=\"Detalhes da tarefa...\" \r\n            onChange={e => setDescription(e.target.value)} value={description} />\r\n        </S.TextArea>\r\n\r\n        <S.Input>\r\n            <span>Data</span>\r\n            <input type=\"date\" placeholder=\"Título da tarefa...\" \r\n            onChange={e => setDate(e.target.value)} value={date} />\r\n            <img src={iconCalendar} alt=\"Calendário\"/>\r\n        </S.Input>\r\n\r\n        <S.Input>\r\n            <span>Hora</span>\r\n            <input type=\"time\" placeholder=\"Título da tarefa...\" \r\n            onChange={e => setHour(e.target.value)} value={hour} />\r\n            <img src={iconClock} alt=\"Relógio\"/>\r\n        </S.Input>\r\n\r\n        <S.Options>\r\n            <div>\r\n                \r\n                <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)} />\r\n                <span>CONCLUÍDO</span>\r\n            </div>\r\n            <button type=\"button\">Excluír</button>\r\n        </S.Options>\r\n\r\n        <S.Save>\r\n            <button type=\"button\" onClick={Save} >GRAVAR</button>\r\n    \r\n    \r\n        </S.Save>\r\n\r\n\r\n\r\n    </S.Form>\r\n\r\n\r\n\r\n\r\n    <Footer/>\r\n    </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Task;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\styles.js",[],{"ruleId":"84","severity":1,"message":"85","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":12},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":44,"column":8,"nodeType":"94","endLine":44,"endColumn":23,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":74,"column":28,"nodeType":"98","messageId":"99","endLine":74,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":15,"column":17,"nodeType":"102","endLine":15,"endColumn":29},{"ruleId":"100","severity":1,"message":"101","line":17,"column":17,"nodeType":"102","endLine":17,"endColumn":29},{"ruleId":"100","severity":1,"message":"101","line":19,"column":17,"nodeType":"102","endLine":19,"endColumn":29},{"ruleId":"88","replacedBy":"103"},{"ruleId":"90","replacedBy":"104"},{"ruleId":"92","severity":1,"message":"105","line":10,"column":18,"nodeType":"86","endLine":10,"endColumn":25},{"ruleId":"92","severity":1,"message":"105","line":11,"column":18,"nodeType":"86","endLine":11,"endColumn":25},{"ruleId":"84","severity":1,"message":"106","line":17,"column":12,"nodeType":"86","messageId":"87","endLine":17,"endColumn":14},{"ruleId":"84","severity":1,"message":"107","line":17,"column":17,"nodeType":"86","messageId":"87","endLine":17,"endColumn":22},{"ruleId":"84","severity":1,"message":"108","line":23,"column":24,"nodeType":"86","messageId":"87","endLine":23,"endColumn":37},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.","ArrayExpression",["111"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["109"],["110"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'setMacaddress' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"114","text":"115"},[1543,1558],"[filterActived, loadTasks]"]