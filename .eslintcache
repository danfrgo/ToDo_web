[{"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\index.js":"1","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\index.js":"2","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\index.js":"3","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\styles.js":"4","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\styles.js":"5","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\index.js":"6","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\styles.js":"7","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\index.js":"8","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\styles.js":"9","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\index.js":"10","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\styles.js":"11","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\services\\api.js":"12","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\utils\\typeicons.js":"13"},{"size":206,"mtime":1609013822849,"results":"14","hashOfConfig":"15"},{"size":2381,"mtime":1609342073832,"results":"16","hashOfConfig":"15"},{"size":868,"mtime":1609103278604,"results":"17","hashOfConfig":"15"},{"size":899,"mtime":1609164619592,"results":"18","hashOfConfig":"15"},{"size":1062,"mtime":1609103416782,"results":"19","hashOfConfig":"15"},{"size":246,"mtime":1609113647303,"results":"20","hashOfConfig":"15"},{"size":298,"mtime":1609114273494,"results":"21","hashOfConfig":"15"},{"size":354,"mtime":1609116430443,"results":"22","hashOfConfig":"15"},{"size":505,"mtime":1609116395419,"results":"23","hashOfConfig":"15"},{"size":947,"mtime":1609344126436,"results":"24","hashOfConfig":"15"},{"size":900,"mtime":1609166379226,"results":"25","hashOfConfig":"15"},{"size":148,"mtime":1609330365670,"results":"26","hashOfConfig":"15"},{"size":721,"mtime":1609344236044,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1b2x6x9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\index.js",[],["58","59"],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\index.js",["60"],"import React, {useState, useEffect} from 'react';\r\nimport * as S from './styles';\r\n\r\nimport api from '../../services/api'; // conexao com BD via API\r\n\r\n// Components\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\n\r\n\r\nfunction Home() {\r\n    const [filterActived, setFilterActived] = useState('all');\r\n    const [tasks, setTasks] = useState([]); // [] para guardar varias informaçoes\r\n\r\n    // funçao para carregar as informaçoes das tarefas da BD, atraves de filtros\r\n    async function loadTasks(){\r\n        await api.get(`/task/filter/${filterActived}/11-11-11-11-11-11`)\r\n        .then(response => {\r\n            setTasks(response.data);\r\n            console.log(response.data);\r\n        })\r\n    }\r\n\r\n    // carregar tarefas ecra\r\n    useEffect(() => {\r\n        loadTasks(); // carregar todas as tarefas no ecra\r\n    }, [filterActived]) // sempre que o estado mudar ->filterActived, tambem recarrega o ecra\r\n\r\n\r\n    return (\r\n    <S.Container>\r\n    <Header/>\r\n\r\n    <S.FilterArea>\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"all\")}   >\r\n        <FilterCard title=\"Todos\"   actived={filterActived === 'all'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"today\")}   >\r\n        <FilterCard title=\"Hoje\"    actived={filterActived === 'today'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"week\")}   >\r\n        <FilterCard title=\"Semana\"  actived={filterActived === 'week'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"month\")}   >\r\n        <FilterCard title=\"Mês\"     actived={filterActived === 'month'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"year\")}   >\r\n        <FilterCard title=\"Ano\"     actived={filterActived === 'year'} />\r\n        </button>\r\n    </S.FilterArea>\r\n\r\n    <S.Title>\r\n        <h3>TAREFAS</h3>\r\n    </S.Title>\r\n\r\n\r\n\r\n    <S.Content>\r\n       {\r\n           // map percorre item por item dentro da coleçao\r\n        tasks.map(t => ( \r\n        <TaskCard type={t.type} title={t.title} when={t.when} />\r\n        ))\r\n       }\r\n    </S.Content>\r\n    \r\n    <Footer/>\r\n    </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\index.js",["61","62","63","64"],"import React from 'react';\r\nimport * as S from './styles';\r\n\r\nimport logo from '../../assets/logo.png'\r\nimport bell from '../../assets/bell.png'\r\n\r\nfunction Header() {\r\n    return (\r\n\r\n        <S.Container>\r\n            <S.LeftSide>\r\n                <img src={logo} alt=\"Logo\" />\r\n            </S.LeftSide>\r\n            <S.RightSide>\r\n                <a href=\"#\">INÍCIO</a>\r\n                <span className=\"dividir\"/>\r\n                <a href=\"#\">NOVA TAREFA</a>\r\n                <span className=\"dividir\"/>\r\n                <a href=\"#\">SINCRONIZAR DISPOSITIVO</a>\r\n                <span className=\"dividir\"/>\r\n                <a href=\"#\" id=\"notification\">\r\n                    <img src={bell} alt=\"Notificação\"/>\r\n                    <span>5</span>\r\n                </a>\r\n            </S.RightSide>\r\n        </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\index.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\index.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\index.js",["65","66"],"import React, {useMemo} from 'react'; // vai auxiliar a separar data e hora de when -> useMemo\r\nimport {format} from 'date-fns'; // para formatar data e hora\r\nimport * as S from './styles';\r\n\r\nimport typeIcons from '../../utils/typeicons';\r\n\r\n// import iconDefault from '../../assets/default.png';\r\n\r\nfunction TaskCard({type, title, when}) {\r\n    const date = useMemo(() => format(new Date(when), 'dd/MM/yyyy' ) ); // converter when (que está em string) para formato de data e hora\r\n    const hour = useMemo(() => format(new Date(when), 'HH:mm' ) );\r\n\r\n    return (\r\n\r\n        <S.Container>\r\n            <S.TopCard>\r\n                <img src={typeIcons[type]} alt=\"Icone da Tarefa\"/>\r\n                <h3>{title}</h3>\r\n            </S.TopCard>\r\n            <S.BottomCard>\r\n                <strong>{date}</strong>\r\n                <span>{hour}</span>\r\n\r\n            </S.BottomCard>\r\n        </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default TaskCard;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\services\\api.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\utils\\typeicons.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":29,"column":8,"nodeType":"73","endLine":29,"endColumn":23,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":15,"column":17,"nodeType":"77","endLine":15,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":17,"column":17,"nodeType":"77","endLine":17,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":19,"column":17,"nodeType":"77","endLine":19,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":21,"column":17,"nodeType":"77","endLine":21,"endColumn":47},{"ruleId":"71","severity":1,"message":"78","line":10,"column":18,"nodeType":"79","endLine":10,"endColumn":25},{"ruleId":"71","severity":1,"message":"78","line":11,"column":18,"nodeType":"79","endLine":11,"endColumn":25},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.","ArrayExpression",["82"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"85","text":"86"},[976,991],"[filterActived, loadTasks]"]