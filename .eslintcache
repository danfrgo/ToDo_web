[{"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\index.js":"1","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\index.js":"2","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\index.js":"3","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\styles.js":"4","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\styles.js":"5","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\index.js":"6","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\styles.js":"7","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\index.js":"8","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\styles.js":"9","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\index.js":"10","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\styles.js":"11","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\services\\api.js":"12","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\utils\\typeicons.js":"13","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\index.js":"14","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\styles.js":"15","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\routes\\index.js":"16"},{"size":206,"mtime":1610115964731,"results":"17","hashOfConfig":"18"},{"size":3245,"mtime":1610121253148,"results":"19","hashOfConfig":"18"},{"size":1021,"mtime":1610116213937,"results":"20","hashOfConfig":"18"},{"size":1030,"mtime":1610121080882,"results":"21","hashOfConfig":"18"},{"size":1164,"mtime":1609346165241,"results":"22","hashOfConfig":"18"},{"size":246,"mtime":1609113647303,"results":"23","hashOfConfig":"18"},{"size":298,"mtime":1609114273494,"results":"24","hashOfConfig":"18"},{"size":354,"mtime":1609116430443,"results":"25","hashOfConfig":"18"},{"size":505,"mtime":1609116395419,"results":"26","hashOfConfig":"18"},{"size":965,"mtime":1610121274648,"results":"27","hashOfConfig":"18"},{"size":944,"mtime":1610121339658,"results":"28","hashOfConfig":"18"},{"size":148,"mtime":1609330365670,"results":"29","hashOfConfig":"18"},{"size":721,"mtime":1609344236044,"results":"30","hashOfConfig":"18"},{"size":5854,"mtime":1610121396405,"results":"31","hashOfConfig":"18"},{"size":2050,"mtime":1610048754035,"results":"32","hashOfConfig":"18"},{"size":549,"mtime":1610116871035,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1b2x6x9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\index.js",[],["69","70"],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\index.js",["71","72"],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\index.js",["73"],"import React from 'react';\r\nimport * as S from './styles';\r\n\r\nimport {Link} from 'react-router-dom'; // para redirecionamento = ao href\r\n\r\nimport logo from '../../assets/logo.png'\r\nimport bell from '../../assets/bell.png'\r\n\r\nfunction Header({lateCount, clickNotification}) {\r\n    return (\r\n\r\n        <S.Container>\r\n            <S.LeftSide>\r\n                <img src={logo} alt=\"Logo\" />\r\n            </S.LeftSide>\r\n            <S.RightSide>\r\n            <Link to=\"/\">INICIO</Link>\r\n                <span className=\"dividir\"/>\r\n                <Link to=\"/task\">NOVA TAREFA</Link>\r\n                <span className=\"dividir\"/>\r\n                <a href=\"#\">SINCRONIZAR DISPOSITIVO</a>\r\n                <span className=\"dividir\"/>\r\n                <button onClick={clickNotification} id=\"notification\">\r\n                    <img src={bell} alt=\"Notificação\"/>\r\n                    <span>{lateCount}</span>\r\n                </button>\r\n            </S.RightSide>\r\n        </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\index.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\index.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\index.js",["74","75"],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\services\\api.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\utils\\typeicons.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\index.js",["76","77","78","79"],"import React, {useState, useEffect} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport * as S from './styles';\r\n\r\nimport {format} from 'date-fns';\r\n\r\nimport api from '../../services/api'; // conexao com BD via API\r\n\r\n// Components\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TypeIcons from '../../utils/typeicons';\r\n\r\nimport iconCalendar from '../../assets/calendar.png';\r\nimport iconClock from '../../assets/clock.png';\r\n\r\n// match vem com as infos de parametros de navegação (URL) -> obtençao do ID pelo URL\r\nfunction Task({match}) {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [lateCount, setLateCount] = useState(); // armazenar a quantidade de tarefas em atraso\r\n    const [type, setType] = useState(); // tipo da tarefa\r\n    const [id , setId] = useState(); // guardar ID tarefa\r\n    const [done, setDone] = useState(false); // tarefa concluida ou nao -> por padrao inicia a false (nao concluida)\r\n    const [title, setTitle] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [date, setDate] = useState();\r\n    const [hour, setHour] = useState();\r\n    const [macaddress, setMacaddress] = useState('11-11-11-11-11-11');\r\n\r\n\r\n    // quantidade de tarefas em atraso\r\n    async function lateVerify(){\r\n            await api.get(`/task/filter/late/11-11-11-11-11-11`)\r\n            .then(response => {\r\n                setLateCount(response.data.length);\r\n            })\r\n    }\r\n\r\n    // carregar as infos da API\r\n    async function LoadTaskDetails(){\r\n        await api.get(`/task/${match.params.id}`)\r\n        .then(response => { \r\n            setType(response.data.type)\r\n            setDone(response.data.done)\r\n            setTitle(response.data.title)\r\n            setDescription(response.data.description)\r\n            setDate( format(new Date(response.data.when), 'yyyy-MM-dd'))\r\n            setHour( format(new Date(response.data.when), 'HH:mm' ))\r\n        })\r\n    }\r\n\r\n\r\n    // editar ou registar nova tarefa pela API\r\n    async function Save(){\r\n        // validação dos dados\r\n        if(!title)\r\n            return alert(\"Precisa de informar o título da tarefa\");\r\n        else if(!description)\r\n            return alert(\"Precisa de informar a descrição\");\r\n        else if(!type)\r\n            return alert(\"Precisa de informar o tipo da tarefa\");\r\n        else if(!date)\r\n            return alert(\"Introduza uma data válida\");\r\n        else if(!hour)\r\n            return alert(\"Introduza uma hora válida\");\r\n\r\n\r\n        // se existe id entao atualiza senao regista nova tarefa\r\n        if(match.params.id) {\r\n            await api.put(`/task/${match.params.id}`, {\r\n                macaddress,\r\n                done,\r\n                type,\r\n                title,\r\n                description,\r\n                when: `${date}T${hour}:00.000` // para ficar no padrao do mongoDB\r\n            }).then(() => setRedirect(true)\r\n            ).catch((error) => {\r\n                alert('Erro ' + error); // adicionei aqui\r\n              });\r\n        } else {\r\n            await api.post('/task', {\r\n                macaddress,\r\n                type,\r\n                title,\r\n                description,\r\n                when: `${date}T${hour}:00.000` // para ficar no padrao do mongoDB\r\n            }).then(() => setRedirect(true)\r\n            ).catch((error) => {\r\n                alert('Error ' + error); // adicionei aqui\r\n              });\r\n          }\r\n        }\r\n\r\n    // carregar tarefas ecra\r\n    useEffect(() => {\r\n        lateVerify(); // carregar as tarefas em atraso no \"sino\" de notificação\r\n        LoadTaskDetails();\r\n    }, []) \r\n\r\n    return (\r\n    <S.Container>\r\n       {redirect && <Redirect to=\"/\" /> }\r\n    <Header lateCount={lateCount} />\r\n\r\n\r\n    <S.Form>\r\n\r\n        <S.TypeIcons>\r\n            {\r\n                // para cada icon que encontrar, é gerado um elemento\r\n                TypeIcons.map((icon, index) => (\r\n                    index > 0 && \r\n                    // o index [0] está como null\r\n                    <button type=\"button\" onClick={() => setType(index)}>\r\n                    <img src={icon} alt=\"Tipo da Tarefa\" \r\n                    className={type && type !== index && 'inactive'} /> \r\n                    </button>\r\n                ))\r\n            }\r\n        </S.TypeIcons>\r\n\r\n        <S.Input>\r\n            <span>Título</span>\r\n            <input type=\"text\" placeholder=\"Título da tarefa...\" \r\n            onChange={e => setTitle(e.target.value)} value={title} />\r\n        </S.Input>\r\n\r\n        <S.TextArea>\r\n            <span>Descrição</span>\r\n            <textarea rows={5} placeholder=\"Detalhes da tarefa...\" \r\n            onChange={e => setDescription(e.target.value)} value={description} />\r\n        </S.TextArea>\r\n\r\n        <S.Input>\r\n            <span>Data</span>\r\n            <input type=\"date\" placeholder=\"Título da tarefa...\" \r\n            onChange={e => setDate(e.target.value)} value={date} />\r\n            <img src={iconCalendar} alt=\"Calendário\"/>\r\n        </S.Input>\r\n\r\n        <S.Input>\r\n            <span>Hora</span>\r\n            <input type=\"time\" placeholder=\"Título da tarefa...\" \r\n            onChange={e => setHour(e.target.value)} value={hour} />\r\n            <img src={iconClock} alt=\"Relógio\"/>\r\n        </S.Input>\r\n\r\n        <S.Options>\r\n            <div>\r\n                \r\n                <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)} />\r\n                <span>CONCLUÍDO</span>\r\n            </div>\r\n            <button type=\"button\">Excluír</button>\r\n        </S.Options>\r\n\r\n        <S.Save>\r\n            <button type=\"button\" onClick={Save} >GRAVAR</button>\r\n    \r\n    \r\n        </S.Save>\r\n\r\n\r\n\r\n    </S.Form>\r\n\r\n\r\n\r\n\r\n    <Footer/>\r\n    </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Task;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\routes\\index.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":46,"column":8,"nodeType":"86","endLine":46,"endColumn":23,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":76,"column":28,"nodeType":"90","messageId":"91","endLine":76,"endColumn":30},{"ruleId":"92","severity":1,"message":"93","line":21,"column":17,"nodeType":"94","endLine":21,"endColumn":29},{"ruleId":"84","severity":1,"message":"95","line":10,"column":18,"nodeType":"96","endLine":10,"endColumn":25},{"ruleId":"84","severity":1,"message":"95","line":11,"column":18,"nodeType":"96","endLine":11,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":23,"column":12,"nodeType":"96","messageId":"99","endLine":23,"endColumn":14},{"ruleId":"97","severity":1,"message":"100","line":23,"column":17,"nodeType":"96","messageId":"99","endLine":23,"endColumn":22},{"ruleId":"97","severity":1,"message":"101","line":29,"column":24,"nodeType":"96","messageId":"99","endLine":29,"endColumn":37},{"ruleId":"84","severity":1,"message":"102","line":100,"column":8,"nodeType":"86","endLine":100,"endColumn":10,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.","ArrayExpression",["106"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'id' is assigned a value but never used.","unusedVar","'setId' is assigned a value but never used.","'setMacaddress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'LoadTaskDetails'. Either include it or remove the dependency array.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"112","text":"113"},"Update the dependencies array to be: [LoadTaskDetails]",{"range":"114","text":"115"},[1585,1600],"[filterActived, loadTasks]",[3674,3676],"[LoadTaskDetails]"]