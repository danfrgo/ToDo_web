[{"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\index.js":"1","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\index.js":"2","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\index.js":"3","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\styles.js":"4","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\styles.js":"5","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\index.js":"6","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\styles.js":"7","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\index.js":"8","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\styles.js":"9","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\index.js":"10","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\styles.js":"11","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\services\\api.js":"12","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\utils\\typeicons.js":"13","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\index.js":"14","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\styles.js":"15","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\routes\\index.js":"16"},{"size":206,"mtime":1610115964731,"results":"17","hashOfConfig":"18"},{"size":3231,"mtime":1610116772744,"results":"19","hashOfConfig":"18"},{"size":1021,"mtime":1610116213937,"results":"20","hashOfConfig":"18"},{"size":1008,"mtime":1610116823250,"results":"21","hashOfConfig":"18"},{"size":1164,"mtime":1609346165241,"results":"22","hashOfConfig":"18"},{"size":246,"mtime":1609113647303,"results":"23","hashOfConfig":"18"},{"size":298,"mtime":1609114273494,"results":"24","hashOfConfig":"18"},{"size":354,"mtime":1609116430443,"results":"25","hashOfConfig":"18"},{"size":505,"mtime":1609116395419,"results":"26","hashOfConfig":"18"},{"size":947,"mtime":1609344126436,"results":"27","hashOfConfig":"18"},{"size":900,"mtime":1609166379226,"results":"28","hashOfConfig":"18"},{"size":148,"mtime":1609330365670,"results":"29","hashOfConfig":"18"},{"size":721,"mtime":1609344236044,"results":"30","hashOfConfig":"18"},{"size":5337,"mtime":1610119427761,"results":"31","hashOfConfig":"18"},{"size":2050,"mtime":1610048754035,"results":"32","hashOfConfig":"18"},{"size":549,"mtime":1610116871035,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1b2x6x9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\index.js",[],["70","71"],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\index.js",["72","73"],"import React, {useState, useEffect} from 'react';\r\nimport * as S from './styles';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport api from '../../services/api'; // conexao com BD via API\r\n\r\n// Components\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\n\r\n\r\nfunction Home() {\r\n    const [filterActived, setFilterActived] = useState('all');\r\n    const [tasks, setTasks] = useState([]); // [] para guardar varias informaçoes\r\n    const [lateCount, setLateCount] = useState(); // armazenar a quantidade de tarefas em atraso\r\n\r\n    // funçao para carregar as informaçoes das tarefas da BD, atraves de filtros\r\n    async function loadTasks(){\r\n        await api.get(`/task/filter/${filterActived}/11-11-11-11-11-11`)\r\n        .then(response => {\r\n            setTasks(response.data);\r\n            //console.log(response.data);\r\n        })\r\n    }\r\n\r\n    // quantidade de tarefas em atraso\r\n    async function lateVerify(){\r\n            await api.get(`/task/filter/late/11-11-11-11-11-11`)\r\n            .then(response => {\r\n                setLateCount(response.data.length);\r\n            })\r\n    }\r\n\r\n    // para ter o onclick no sino de notificaçoes atrasadas\r\n    function Notification(){\r\n        setFilterActived('late');\r\n    }\r\n\r\n    // carregar tarefas ecra\r\n    useEffect(() => {\r\n        loadTasks(); // carregar todas as tarefas no ecra\r\n        lateVerify(); // carregar as tarefas em atraso no \"sino\" de notificação\r\n    }, [filterActived]) // sempre que o estado mudar ->filterActived, tambem recarrega o ecra\r\n\r\n\r\n    return (\r\n    <S.Container>\r\n    <Header lateCount={lateCount} clickNotification={Notification}/>\r\n\r\n    <S.FilterArea>\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"all\")}   >\r\n        <FilterCard title=\"Todos\"   actived={filterActived === 'all'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"today\")}   >\r\n        <FilterCard title=\"Hoje\"    actived={filterActived === 'today'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"week\")}   >\r\n        <FilterCard title=\"Semana\"  actived={filterActived === 'week'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"month\")}   >\r\n        <FilterCard title=\"Mês\"     actived={filterActived === 'month'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={()=> setFilterActived(\"year\")}   >\r\n        <FilterCard title=\"Ano\"     actived={filterActived === 'year'} />\r\n        </button>\r\n    </S.FilterArea>\r\n\r\n    <S.Title>\r\n        <h3>{filterActived == 'late' ? 'TAREFAS ATRASADAS' : 'TAREFAS'}</h3>\r\n    </S.Title>\r\n\r\n\r\n\r\n    <S.Content>\r\n       {\r\n           // map percorre item por item dentro da coleçao\r\n           // _id porque é dessa forma que o mongoDB armazena o campo\r\n        tasks.map(t => ( \r\n            <Link to={`/task/${t._id}`}>\r\n        <TaskCard type={t.type} title={t.title} when={t.when} />\r\n        </Link>\r\n        ))\r\n       }\r\n    </S.Content>\r\n    \r\n    <Footer/>\r\n    </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\index.js",["74"],"import React from 'react';\r\nimport * as S from './styles';\r\n\r\nimport {Link} from 'react-router-dom'; // para redirecionamento = ao href\r\n\r\nimport logo from '../../assets/logo.png'\r\nimport bell from '../../assets/bell.png'\r\n\r\nfunction Header({lateCount, clickNotification}) {\r\n    return (\r\n\r\n        <S.Container>\r\n            <S.LeftSide>\r\n                <img src={logo} alt=\"Logo\" />\r\n            </S.LeftSide>\r\n            <S.RightSide>\r\n            <Link to=\"/\">INICIO</Link>\r\n                <span className=\"dividir\"/>\r\n                <Link to=\"/task\">NOVA TAREFA</Link>\r\n                <span className=\"dividir\"/>\r\n                <a href=\"#\">SINCRONIZAR DISPOSITIVO</a>\r\n                <span className=\"dividir\"/>\r\n                <button onClick={clickNotification} id=\"notification\">\r\n                    <img src={bell} alt=\"Notificação\"/>\r\n                    <span>{lateCount}</span>\r\n                </button>\r\n            </S.RightSide>\r\n        </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Home\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Header\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\index.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\Footer\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\index.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\FilterCard\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\index.js",["75","76"],"import React, {useMemo} from 'react'; // vai auxiliar a separar data e hora de when -> useMemo\r\nimport {format} from 'date-fns'; // para formatar data e hora\r\nimport * as S from './styles';\r\n\r\nimport typeIcons from '../../utils/typeicons';\r\n\r\n// import iconDefault from '../../assets/default.png';\r\n\r\nfunction TaskCard({type, title, when}) {\r\n    const date = useMemo(() => format(new Date(when), 'dd/MM/yyyy' ) ); // converter when (que está em string) para formato de data e hora\r\n    const hour = useMemo(() => format(new Date(when), 'HH:mm' ) );\r\n\r\n    return (\r\n\r\n        <S.Container>\r\n            <S.TopCard>\r\n                <img src={typeIcons[type]} alt=\"Icone da Tarefa\"/>\r\n                <h3>{title}</h3>\r\n            </S.TopCard>\r\n            <S.BottomCard>\r\n                <strong>{date}</strong>\r\n                <span>{hour}</span>\r\n\r\n            </S.BottomCard>\r\n        </S.Container>\r\n\r\n    )\r\n}\r\n\r\nexport default TaskCard;\r\n","C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\components\\TaskCard\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\services\\api.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\utils\\typeicons.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\index.js",["77","78","79","80"],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\views\\Task\\styles.js",[],"C:\\Users\\Danie\\Desktop\\nodereacproj\\web\\web\\src\\routes\\index.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":46,"column":8,"nodeType":"87","endLine":46,"endColumn":23,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":76,"column":28,"nodeType":"91","messageId":"92","endLine":76,"endColumn":30},{"ruleId":"93","severity":1,"message":"94","line":21,"column":17,"nodeType":"95","endLine":21,"endColumn":29},{"ruleId":"85","severity":1,"message":"96","line":10,"column":18,"nodeType":"97","endLine":10,"endColumn":25},{"ruleId":"85","severity":1,"message":"96","line":11,"column":18,"nodeType":"97","endLine":11,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":23,"column":12,"nodeType":"97","messageId":"100","endLine":23,"endColumn":14},{"ruleId":"98","severity":1,"message":"101","line":23,"column":17,"nodeType":"97","messageId":"100","endLine":23,"endColumn":22},{"ruleId":"98","severity":1,"message":"102","line":29,"column":24,"nodeType":"97","messageId":"100","endLine":29,"endColumn":37},{"ruleId":"85","severity":1,"message":"103","line":86,"column":8,"nodeType":"87","endLine":86,"endColumn":10,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.","ArrayExpression",["107"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'id' is assigned a value but never used.","unusedVar","'setId' is assigned a value but never used.","'setMacaddress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'LoadTaskDetails'. Either include it or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"113","text":"114"},"Update the dependencies array to be: [LoadTaskDetails]",{"range":"115","text":"116"},[1585,1600],"[filterActived, loadTasks]",[3164,3166],"[LoadTaskDetails]"]